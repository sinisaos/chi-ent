// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// CreateAnswer implements createAnswer operation.
//
// Creates a new Answer and persists it to storage.
//
// POST /answers
func (UnimplementedHandler) CreateAnswer(ctx context.Context, req *CreateAnswerReq) (r CreateAnswerRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateQuestion implements createQuestion operation.
//
// Creates a new Question and persists it to storage.
//
// POST /questions
func (UnimplementedHandler) CreateQuestion(ctx context.Context, req *CreateQuestionReq) (r CreateQuestionRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateQuestionTag implements createQuestionTag operation.
//
// Creates a new QuestionTag and persists it to storage.
//
// POST /question-tags
func (UnimplementedHandler) CreateQuestionTag(ctx context.Context, req *CreateQuestionTagReq) (r CreateQuestionTagRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateTag implements createTag operation.
//
// Creates a new Tag and persists it to storage.
//
// POST /tags
func (UnimplementedHandler) CreateTag(ctx context.Context, req *CreateTagReq) (r CreateTagRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateUser implements createUser operation.
//
// Creates a new User and persists it to storage.
//
// POST /users
func (UnimplementedHandler) CreateUser(ctx context.Context, req *CreateUserReq) (r CreateUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteAnswer implements deleteAnswer operation.
//
// Deletes the Answer with the requested ID.
//
// DELETE /answers/{id}
func (UnimplementedHandler) DeleteAnswer(ctx context.Context, params DeleteAnswerParams) (r DeleteAnswerRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteQuestion implements deleteQuestion operation.
//
// Deletes the Question with the requested ID.
//
// DELETE /questions/{id}
func (UnimplementedHandler) DeleteQuestion(ctx context.Context, params DeleteQuestionParams) (r DeleteQuestionRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteQuestionTag implements deleteQuestionTag operation.
//
// Deletes the QuestionTag with the requested ID.
//
// DELETE /question-tags/{id}
func (UnimplementedHandler) DeleteQuestionTag(ctx context.Context, params DeleteQuestionTagParams) (r DeleteQuestionTagRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteTag implements deleteTag operation.
//
// Deletes the Tag with the requested ID.
//
// DELETE /tags/{id}
func (UnimplementedHandler) DeleteTag(ctx context.Context, params DeleteTagParams) (r DeleteTagRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteUser implements deleteUser operation.
//
// Deletes the User with the requested ID.
//
// DELETE /users/{id}
func (UnimplementedHandler) DeleteUser(ctx context.Context, params DeleteUserParams) (r DeleteUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListAnswer implements listAnswer operation.
//
// List Answers.
//
// GET /answers
func (UnimplementedHandler) ListAnswer(ctx context.Context, params ListAnswerParams) (r ListAnswerRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListQuestion implements listQuestion operation.
//
// List Questions.
//
// GET /questions
func (UnimplementedHandler) ListQuestion(ctx context.Context, params ListQuestionParams) (r ListQuestionRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListQuestionAnswers implements listQuestionAnswers operation.
//
// List attached Answers.
//
// GET /questions/{id}/answers
func (UnimplementedHandler) ListQuestionAnswers(ctx context.Context, params ListQuestionAnswersParams) (r ListQuestionAnswersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListQuestionQuestionTag implements listQuestionQuestionTag operation.
//
// List attached QuestionTags.
//
// GET /questions/{id}/question-tag
func (UnimplementedHandler) ListQuestionQuestionTag(ctx context.Context, params ListQuestionQuestionTagParams) (r ListQuestionQuestionTagRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListQuestionTag implements listQuestionTag operation.
//
// List QuestionTags.
//
// GET /question-tags
func (UnimplementedHandler) ListQuestionTag(ctx context.Context, params ListQuestionTagParams) (r ListQuestionTagRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListQuestionTags implements listQuestionTags operation.
//
// List attached Tags.
//
// GET /questions/{id}/tags
func (UnimplementedHandler) ListQuestionTags(ctx context.Context, params ListQuestionTagsParams) (r ListQuestionTagsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListTag implements listTag operation.
//
// List Tags.
//
// GET /tags
func (UnimplementedHandler) ListTag(ctx context.Context, params ListTagParams) (r ListTagRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListTagQuestions implements listTagQuestions operation.
//
// List attached Questions.
//
// GET /tags/{id}/questions
func (UnimplementedHandler) ListTagQuestions(ctx context.Context, params ListTagQuestionsParams) (r ListTagQuestionsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListTagTagQuestion implements listTagTagQuestion operation.
//
// List attached TagQuestions.
//
// GET /tags/{id}/tag-question
func (UnimplementedHandler) ListTagTagQuestion(ctx context.Context, params ListTagTagQuestionParams) (r ListTagTagQuestionRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUser implements listUser operation.
//
// List Users.
//
// GET /users
func (UnimplementedHandler) ListUser(ctx context.Context, params ListUserParams) (r ListUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUserAnswers implements listUserAnswers operation.
//
// List attached Answers.
//
// GET /users/{id}/answers
func (UnimplementedHandler) ListUserAnswers(ctx context.Context, params ListUserAnswersParams) (r ListUserAnswersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUserQuestions implements listUserQuestions operation.
//
// List attached Questions.
//
// GET /users/{id}/questions
func (UnimplementedHandler) ListUserQuestions(ctx context.Context, params ListUserQuestionsParams) (r ListUserQuestionsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUserTags implements listUserTags operation.
//
// List attached Tags.
//
// GET /users/{id}/tags
func (UnimplementedHandler) ListUserTags(ctx context.Context, params ListUserTagsParams) (r ListUserTagsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadAnswer implements readAnswer operation.
//
// Finds the Answer with the requested ID and returns it.
//
// GET /answers/{id}
func (UnimplementedHandler) ReadAnswer(ctx context.Context, params ReadAnswerParams) (r ReadAnswerRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadAnswerAuthor implements readAnswerAuthor operation.
//
// Find the attached User of the Answer with the given ID.
//
// GET /answers/{id}/author
func (UnimplementedHandler) ReadAnswerAuthor(ctx context.Context, params ReadAnswerAuthorParams) (r ReadAnswerAuthorRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadAnswerQuestion implements readAnswerQuestion operation.
//
// Find the attached Question of the Answer with the given ID.
//
// GET /answers/{id}/question
func (UnimplementedHandler) ReadAnswerQuestion(ctx context.Context, params ReadAnswerQuestionParams) (r ReadAnswerQuestionRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadQuestion implements readQuestion operation.
//
// Finds the Question with the requested ID and returns it.
//
// GET /questions/{id}
func (UnimplementedHandler) ReadQuestion(ctx context.Context, params ReadQuestionParams) (r ReadQuestionRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadQuestionAuthor implements readQuestionAuthor operation.
//
// Find the attached User of the Question with the given ID.
//
// GET /questions/{id}/author
func (UnimplementedHandler) ReadQuestionAuthor(ctx context.Context, params ReadQuestionAuthorParams) (r ReadQuestionAuthorRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadQuestionTag implements readQuestionTag operation.
//
// Finds the QuestionTag with the requested ID and returns it.
//
// GET /question-tags/{id}
func (UnimplementedHandler) ReadQuestionTag(ctx context.Context, params ReadQuestionTagParams) (r ReadQuestionTagRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadQuestionTagQuestion implements readQuestionTagQuestion operation.
//
// Find the attached Question of the QuestionTag with the given ID.
//
// GET /question-tags/{id}/question
func (UnimplementedHandler) ReadQuestionTagQuestion(ctx context.Context, params ReadQuestionTagQuestionParams) (r ReadQuestionTagQuestionRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadQuestionTagTag implements readQuestionTagTag operation.
//
// Find the attached Tag of the QuestionTag with the given ID.
//
// GET /question-tags/{id}/tag
func (UnimplementedHandler) ReadQuestionTagTag(ctx context.Context, params ReadQuestionTagTagParams) (r ReadQuestionTagTagRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadTag implements readTag operation.
//
// Finds the Tag with the requested ID and returns it.
//
// GET /tags/{id}
func (UnimplementedHandler) ReadTag(ctx context.Context, params ReadTagParams) (r ReadTagRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadUser implements readUser operation.
//
// Finds the User with the requested ID and returns it.
//
// GET /users/{id}
func (UnimplementedHandler) ReadUser(ctx context.Context, params ReadUserParams) (r ReadUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateAnswer implements updateAnswer operation.
//
// Updates a Answer and persists changes to storage.
//
// PATCH /answers/{id}
func (UnimplementedHandler) UpdateAnswer(ctx context.Context, req *UpdateAnswerReq, params UpdateAnswerParams) (r UpdateAnswerRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateQuestion implements updateQuestion operation.
//
// Updates a Question and persists changes to storage.
//
// PATCH /questions/{id}
func (UnimplementedHandler) UpdateQuestion(ctx context.Context, req *UpdateQuestionReq, params UpdateQuestionParams) (r UpdateQuestionRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateQuestionTag implements updateQuestionTag operation.
//
// Updates a QuestionTag and persists changes to storage.
//
// PATCH /question-tags/{id}
func (UnimplementedHandler) UpdateQuestionTag(ctx context.Context, req *UpdateQuestionTagReq, params UpdateQuestionTagParams) (r UpdateQuestionTagRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateTag implements updateTag operation.
//
// Updates a Tag and persists changes to storage.
//
// PATCH /tags/{id}
func (UnimplementedHandler) UpdateTag(ctx context.Context, req *UpdateTagReq, params UpdateTagParams) (r UpdateTagRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateUser implements updateUser operation.
//
// Updates a User and persists changes to storage.
//
// PATCH /users/{id}
func (UnimplementedHandler) UpdateUser(ctx context.Context, req *UpdateUserReq, params UpdateUserParams) (r UpdateUserRes, _ error) {
	return r, ht.ErrNotImplemented
}
